## type Decl(MConst,while,Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),Decl(MVar,i,N(0.0),Binary(Seq,Call(Call(Var(while),List(Binary(Lt,Var(i),N(10.0)))),List(Binary(Seq,Print(Var(i)),Binary(Seq,Assign(Var(i),Binary(Plus,Var(i),N(1.0))),Undefined)))),Var(i)))) : number
## step    0:
##  Map()
##  Decl(MConst,while,Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),Decl(MVar,i,N(0.0),Binary(Seq,Call(Call(Var(while),List(Binary(Lt,Var(i),N(10.0)))),List(Binary(Seq,Print(Var(i)),Binary(Seq,Assign(Var(i),Binary(Plus,Var(i),N(1.0))),Undefined)))),Var(i))))
## step    1:
##  Map()
##  Decl(MVar,i,N(0.0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Var(i),N(10.0)))),List(Binary(Seq,Print(Var(i)),Binary(Seq,Assign(Var(i),Binary(Plus,Var(i),N(1.0))),Undefined)))),Var(i)))
## step    2:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step    3:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step    4:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step    5:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(0.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step    6:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step    7:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step    8:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step    9:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(0.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
0.0
## step   10:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   11:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   12:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(0.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   13:
##  Map(A(1) -> N(0.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(1.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   14:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(1.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   15:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   16:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   17:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   18:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   19:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(1.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   20:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   21:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   22:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   23:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(1.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
1.0
## step   24:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   25:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   26:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(1.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   27:
##  Map(A(1) -> N(1.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(2.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   28:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(2.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   29:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   30:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   31:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   32:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   33:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(2.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   34:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   35:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   36:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   37:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(2.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
2.0
## step   38:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   39:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   40:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(2.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   41:
##  Map(A(1) -> N(2.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(3.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   42:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(3.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   43:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   44:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   45:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   46:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   47:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(3.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   48:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   49:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   50:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   51:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(3.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
3.0
## step   52:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   53:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   54:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(3.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   55:
##  Map(A(1) -> N(3.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(4.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   56:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(4.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   57:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   58:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   59:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   60:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   61:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(4.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   62:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   63:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   64:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   65:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(4.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
4.0
## step   66:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   67:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   68:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(4.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   69:
##  Map(A(1) -> N(4.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(5.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   70:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(5.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   71:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   72:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   73:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   74:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   75:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(5.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   76:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   77:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   78:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   79:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(5.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
5.0
## step   80:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   81:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   82:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(5.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   83:
##  Map(A(1) -> N(5.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(6.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   84:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(6.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   85:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   86:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   87:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step   88:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   89:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(6.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   90:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   91:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step   92:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   93:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(6.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
6.0
## step   94:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   95:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   96:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(6.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   97:
##  Map(A(1) -> N(6.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(7.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   98:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(7.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step   99:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  100:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step  101:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step  102:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  103:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(7.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  104:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  105:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  106:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  107:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(7.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
7.0
## step  108:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  109:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  110:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(7.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  111:
##  Map(A(1) -> N(7.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(8.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  112:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(8.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  113:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  114:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step  115:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step  116:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  117:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(8.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  118:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  119:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  120:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  121:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(8.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
8.0
## step  122:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  123:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  124:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(8.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  125:
##  Map(A(1) -> N(8.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(9.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  126:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(9.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  127:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  128:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step  129:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step  130:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  131:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(9.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  132:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  133:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  134:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  135:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(9.0)),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
9.0
## step  136:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  137:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  138:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,N(9.0),N(1.0))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  139:
##  Map(A(1) -> N(9.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(1)),N(10.0)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  140:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,Binary(Seq,Binary(Seq,N(10.0),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  141:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined))))),Unary(Deref,A(1)))
## step  142:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step  143:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Var(body)))))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))),Unary(Deref,A(1)))
## step  144:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,Unary(Deref,A(1)),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  145:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,If(Unary(Not,Binary(Lt,N(10.0),N(10.0))),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  146:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,If(Unary(Not,B(false)),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  147:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,If(B(true),Undefined,Binary(Seq,Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Lt,Unary(Deref,A(1)),N(10.0)))),List(Binary(Seq,Print(Unary(Deref,A(1))),Binary(Seq,Assign(Unary(Deref,A(1)),Binary(Plus,Unary(Deref,A(1)),N(1.0))),Undefined)))))),Unary(Deref,A(1)))
## step  148:
##  Map(A(1) -> N(10.0))
##  Binary(Seq,Undefined,Unary(Deref,A(1)))
## step  149:
##  Map(A(1) -> N(10.0))
##  Unary(Deref,A(1))
## result:
##  Map(A(1) -> N(10.0))
##  N(10.0)
10.0
